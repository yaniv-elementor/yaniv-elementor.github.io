import React from 'react';
import MuiButton__default from '@mui/material/Button';
export * from '@mui/material/Button';

const LINK_PSEUDO_SELECTORS = '&:hover,&:focus,&:active,&:visited';

const hardCodedColor = {
    primary: '#C00BB9',
    global: '#17929B',
};
const getLinkTextColor = (color = 'primary', variant = 'text') => {
    if (!color) {
        return;
    }
    if (color === 'inherit') {
        return 'inherit';
    }
    if (variant === 'contained') {
        return `${color}.contrastText`;
    }
    if (color in hardCodedColor) {
        return hardCodedColor[color];
    }
    return `${color}.main`;
};
// Modified reason: Material UI Typescript problem with the 'component' prop and handling the link global style overrides.
const Button = React.forwardRef((props, ref) => {
    const { sx = {}, ...rootProps } = props;
    let linkSx = {};
    // Temporary solution to prevent global styles from affecting the link color.
    if (rootProps.href) {
        linkSx = {
            [LINK_PSEUDO_SELECTORS]: {
                color: getLinkTextColor(rootProps.color, rootProps.variant),
            },
        };
    }
    return (React.createElement(MuiButton__default, { ...props, sx: {
            ...linkSx,
            ...sx,
        }, ref: ref }));
});

export { Button as default };
//# sourceMappingURL=index.esm.js.map
