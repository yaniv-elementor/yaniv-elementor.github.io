import React from 'react';
import { Theme as MuiTheme, PaletteColor as MuiPaletteColor } from '@mui/material/styles';
import { ThemeProviderProps as MuiThemeProviderProps } from '@mui/material/styles/ThemeProvider';
import { lightTheme } from './theme-config/light';
import { darkTheme } from './theme-config/dark';
import { themePaletteSemanticColors } from './theme-config/constants';
export type { MuiTheme as Theme };
export { lightTheme, darkTheme, };
export interface ThemeProviderProps {
    children: MuiThemeProviderProps['children'];
    colorScheme?: 'light' | 'dark' | 'auto';
}
type MuiBuiltInPaletteSemanticColors = 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'error';
type ThemePaletteSemanticColors = typeof themePaletteSemanticColors[number];
type CustomPaletteSemanticColors = Exclude<ThemePaletteSemanticColors, MuiBuiltInPaletteSemanticColors>;
type CustomPaletteInterface = {
    [key in CustomPaletteSemanticColors]: MuiPaletteColor;
};
type SharedPropsColorOverrides = {
    [key in CustomPaletteSemanticColors]: true;
};
export declare const ThemeProvider: React.FC<ThemeProviderProps>;
declare module '@mui/material/styles' {
    interface TypeText {
        tertiary: string;
    }
    interface Palette extends CustomPaletteInterface {
    }
    interface PaletteOptions extends CustomPaletteInterface {
    }
}
declare module '@mui/material/Button' {
    interface ButtonPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Badge' {
    interface BadgePropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/ButtonGroup' {
    interface ButtonGroupPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Checkbox' {
    interface CheckboxPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Chip' {
    interface ChipPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/CircularProgress' {
    interface CircularProgressPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Icon' {
    interface IconPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/IconButton' {
    interface IconButtonPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/LinearProgress' {
    interface LinearProgressPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Radio' {
    interface RadioPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/SvgIcon' {
    interface SvgIconPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/Switch' {
    interface SwitchPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
declare module '@mui/material/ToggleButton' {
    interface ToggleButtonPropsColorOverrides extends SharedPropsColorOverrides {
    }
}
