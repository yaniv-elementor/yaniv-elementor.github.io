{
  "version": 3,
  "sources": ["../../@elementor/library/DirectionProvider/DirectionProvider.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { ThemeProviderProps } from '@mui/material/styles/ThemeProvider';\n\n// RTL support.\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { prefixer } from 'stylis';\n\nexport interface DirectionProviderProps {\n\tchildren: ThemeProviderProps['children'];\n\trtl?: boolean;\n}\n\nexport interface DirectionCacheProviderProps {\n\tchildren: React.ReactNode;\n\tisRTL?: boolean;\n}\n\nexport const DirectionContext = React.createContext( false );\n\n/**\n * @see https://mui.com/material-ui/guides/right-to-left/\n */\nconst cacheRtl = createCache( {\n\t// Define class names prefix.\n\tkey: 'eui-rtl',\n\tstylisPlugins: [ prefixer, rtlPlugin ],\n} );\n\nconst DirectionCacheProvider: React.FC<DirectionCacheProviderProps> = ( props ) => {\n\tif ( ! props.isRTL ) {\n\t\treturn <>{ props.children }</>;\n\t}\n\n\treturn <CacheProvider value={ cacheRtl }>{ props.children }</CacheProvider>;\n};\n\nconst DirectionProvider: React.FC<DirectionProviderProps> = ( props ) => {\n\tconst isRTL = !! props.rtl;\n\n\treturn (\n\t\t<DirectionContext.Provider value={ isRTL }>\n\t\t\t<DirectionCacheProvider isRTL={ isRTL }>\n\t\t\t\t{ props.children }\n\t\t\t</DirectionCacheProvider>\n\t\t</DirectionContext.Provider>\n\t);\n};\n\nexport default DirectionProvider;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAmBa,IAAA,mBAAmB,aAAAA,QAAM,cAAe,KAAK;AAK1D,IAAM,WAAW,kCAAa;;EAE7B,KAAK;EACL,eAAe,CAAE,UAAU,kBAAS;AACpC,CAAA;AAED,IAAM,yBAAgE,CAAE,UAAU;AACjF,MAAK,CAAE,MAAM,OAAQ;AACpB,WAAO,aAAAA,QAAI,cAAA,aAAAA,QAAA,UAAA,MAAA,MAAM,QAAQ;EACzB;AAED,SAAO,aAAAA,QAAA,cAAC,eAAa,EAAC,OAAQ,SAAQ,GAAK,MAAM,QAAQ;AAC1D;AAEA,IAAM,oBAAsD,CAAE,UAAU;AACvE,QAAM,QAAQ,CAAC,CAAE,MAAM;AAEvB,SACC,aAAAA,QAAA;IAAC,iBAAiB;IAAS,EAAA,OAAQ,MAAK;IACvC,aAAAA,QAAA,cAAC,wBAAsB,EAAC,MAAa,GAClC,MAAM,QAAQ;EACQ;AAG5B;",
  "names": ["React"]
}
