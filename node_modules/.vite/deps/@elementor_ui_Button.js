import {
  Button_default,
  buttonClasses_default,
  getButtonUtilityClass
} from "./chunk-ECMLMTAD.js";
import "./chunk-JTSEL6IP.js";
import "./chunk-WSXHA2LU.js";
import "./chunk-ACOQPVBQ.js";
import "./chunk-SMHYBUCF.js";
import "./chunk-ZW7WJ6XU.js";
import "./chunk-IIQTPCG2.js";
import "./chunk-TCT5RRUT.js";
import "./chunk-7XQ7WICN.js";
import "./chunk-OFN42TVC.js";
import "./chunk-KGCM4VSJ.js";
import "./chunk-7KSYY5OG.js";
import "./chunk-YDHZJYY4.js";
import "./chunk-DT77FM6J.js";
import "./chunk-LTODIF4Y.js";
import "./chunk-ZW3DX352.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/@elementor/ui/Button/index.esm.js
var import_react = __toESM(require_react());
var LINK_PSEUDO_SELECTORS = "&:hover,&:focus,&:active,&:visited";
var hardCodedColor = {
  primary: "#C00BB9",
  global: "#17929B"
};
var getLinkTextColor = (color = "primary", variant = "text") => {
  if (!color) {
    return;
  }
  if (color === "inherit") {
    return "inherit";
  }
  if (variant === "contained") {
    return `${color}.contrastText`;
  }
  if (color in hardCodedColor) {
    return hardCodedColor[color];
  }
  return `${color}.main`;
};
var Button = import_react.default.forwardRef((props, ref) => {
  const { sx = {}, ...rootProps } = props;
  let linkSx = {};
  if (rootProps.href) {
    linkSx = {
      [LINK_PSEUDO_SELECTORS]: {
        color: getLinkTextColor(rootProps.color, rootProps.variant)
      }
    };
  }
  return import_react.default.createElement(Button_default, { ...props, sx: {
    ...linkSx,
    ...sx
  }, ref });
});
export {
  buttonClasses_default as buttonClasses,
  Button as default,
  getButtonUtilityClass
};
//# sourceMappingURL=@elementor_ui_Button.js.map
