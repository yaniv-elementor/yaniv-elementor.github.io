import {
  Link_default,
  getLinkUtilityClass,
  linkClasses_default
} from "./chunk-6D3AL5QH.js";
import "./chunk-DMYOSWHS.js";
import "./chunk-IIQTPCG2.js";
import "./chunk-TCT5RRUT.js";
import "./chunk-7XQ7WICN.js";
import "./chunk-OFN42TVC.js";
import "./chunk-KGCM4VSJ.js";
import "./chunk-7KSYY5OG.js";
import "./chunk-YDHZJYY4.js";
import "./chunk-DT77FM6J.js";
import "./chunk-LTODIF4Y.js";
import "./chunk-ZW3DX352.js";
import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/@elementor/ui/Link/index.esm.js
var import_react = __toESM(require_react());
var LINK_PSEUDO_SELECTORS = "&:hover,&:focus,&:active,&:visited";
var colorTransformations = {
  primary: "primary.main",
  textPrimary: "text.primary",
  secondary: "secondary.main",
  textSecondary: "text.secondary",
  error: "error.main"
};
var convertToSxSupportedColor = (color) => {
  if (color === "primary.main" || color === "primary") {
    return "#C00BB9";
  }
  if (color === "global.main") {
    return "#17929B";
  }
  return colorTransformations[color] || color;
};
var Link = import_react.default.forwardRef((inProps, ref) => {
  const { sx = {}, ...props } = inProps;
  const sxSupportedColor = convertToSxSupportedColor(props.color);
  return import_react.default.createElement(Link_default, { ...props, color: sxSupportedColor, sx: {
    // Setting the pseudo-classes color by default to prevent global CSS from overriding the link color on :hover.
    [LINK_PSEUDO_SELECTORS]: {
      color: sxSupportedColor
    },
    ...sx
  }, ref });
});
Link.defaultProps = {
  color: "primary.main"
};
export {
  Link as default,
  getLinkUtilityClass,
  linkClasses_default as linkClasses
};
//# sourceMappingURL=@elementor_ui_Link.js.map
