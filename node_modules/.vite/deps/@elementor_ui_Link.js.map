{
  "version": 3,
  "sources": ["../../@elementor/library/styles/theme-config/constants.ts", "../../@elementor/library/Link/Link.tsx"],
  "sourcesContent": ["export const themePaletteSemanticColors = [\n\t'primary',\n\t'secondary',\n\t'error',\n\t'warning',\n\t'info',\n\t'success',\n\t'accent',\n\t'global',\n\t'promotion',\n] as const;\n\nexport const LINK_PSEUDO_SELECTORS = '&:hover,&:focus,&:active,&:visited';\n", "import React from 'react';\nimport { default as MuiLink, LinkProps } from '@mui/material/Link';\nimport { LINK_PSEUDO_SELECTORS } from '../styles/theme-config/constants';\n\n/**\n * All supported colors for the Link component that can be passed as a string (without using primary.main, secondary.main, etc.).\n *\n * @see https://github.com/mui/material-ui/blob/f3945c1227afc13fbf732e66875095a793af2f10/packages/mui-material/src/Typography/Typography.js#L82\n */\nconst colorTransformations = {\n\tprimary: 'primary.main',\n\ttextPrimary: 'text.primary',\n\tsecondary: 'secondary.main',\n\ttextSecondary: 'text.secondary',\n\terror: 'error.main',\n};\n\n// The sx prop does not support the color values of the Link component, so we need to transform them to the correct format.\nconst convertToSxSupportedColor = ( color: LinkProps['color'] ) => {\n\t// Temporary customization until the pink color will be replaced with purple.\n\tif ( color === 'primary.main' || color === 'primary' ) {\n\t\treturn '#C00BB9';\n\t}\n\n\tif ( color === 'global.main' ) {\n\t\treturn '#17929B';\n\t}\n\n\treturn colorTransformations[ color as keyof typeof colorTransformations ] || color;\n};\n\n// Modified reason: the Link component does not provide default style for :hover, therefore global CSS can override the link color.\nconst Link = React.forwardRef<HTMLElement, LinkProps>( ( inProps, ref ) => {\n\tconst { sx = {}, ...props } = inProps;\n\n\tconst sxSupportedColor = convertToSxSupportedColor( props.color );\n\n\treturn (\n\t\t<MuiLink\n\t\t\t{ ...props }\n\t\t\tcolor={ sxSupportedColor }\n\t\t\tsx={ {\n\t\t\t\t// Setting the pseudo-classes color by default to prevent global CSS from overriding the link color on :hover.\n\t\t\t\t[ LINK_PSEUDO_SELECTORS ]: {\n\t\t\t\t\tcolor: sxSupportedColor,\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t} }\n\t\t\tref={ ref as React.MutableRefObject<null> }\n\t\t/>\n\t);\n} ) as React.FC<LinkProps>;\n\nLink.defaultProps = {\n\tcolor: 'primary.main',\n};\n\nexport default Link;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAYO,IAAM,wBAAwB;ACHrC,IAAM,uBAAuB;EAC5B,SAAS;EACT,aAAa;EACb,WAAW;EACX,eAAe;EACf,OAAO;;AAIR,IAAM,4BAA4B,CAAE,UAA8B;AAEjE,MAAK,UAAU,kBAAkB,UAAU,WAAY;AACtD,WAAO;EACP;AAED,MAAK,UAAU,eAAgB;AAC9B,WAAO;EACP;AAED,SAAO,qBAAsB,KAA0C,KAAM;AAC9E;AAGM,IAAA,OAAO,aAAAA,QAAM,WAAoC,CAAE,SAAS,QAAQ;AACzE,QAAM,EAAE,KAAK,CAAA,GAAI,GAAG,MAAK,IAAK;AAE9B,QAAM,mBAAmB,0BAA2B,MAAM,KAAK;AAE/D,SACC,aAAAA,QAAC,cAAAC,cACK,EAAA,GAAA,OACL,OAAQ,kBACR,IAAK;;IAEJ,CAAE,qBAAqB,GAAI;MAC1B,OAAO;IACP;IACD,GAAG;EACH,GACD,IAAyC,CAAA;AAG5C,CAAC;AAED,KAAK,eAAe;EACnB,OAAO;;",
  "names": ["React", "MuiLink"]
}
