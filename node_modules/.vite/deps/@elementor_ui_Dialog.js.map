{
  "version": 3,
  "sources": ["../../@elementor/library/Dialog/Dialog.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { default as MuiDialog, DialogProps as MuiDialogProps } from '@mui/material/Dialog';\n\n/**\n * Material UI has a known typescript problem with components that uses the 'component' prop:\n *\n * @see https://github.com/mui/material-ui/pull/32404#issuecomment-1105228783\n *\n * Therefore, adding a workaround by extending the source MenuProps interface and adding the 'component' prop.\n *\n * At the moment that the following PR is merged, this workaround can probably be removed:\n *\n * @see https://github.com/mui/material-ui/pull/35924\n *\n * Once the PR is merged, verify the fix by making sure that there is no typescript error in the following code:\n *\n * <Dialog PaperProps={ { component: 'div' } }></Dialog>\n *\n * The following components share the same problem: Button, IconButton, ToggleButton, List, ListItem, ListItemButton, MenuList, Menu, MenuItem, Paper, Dialog, Drawer, Typography.\n */\n\nexport interface DialogProps extends MuiDialogProps {\n\tPaperProps?: MuiDialogProps['PaperProps'] & {\n\t\tcomponent?: React.ElementType;\n\t};\n}\n\n// Modified reason: Material UI Typescript problem with the 'component' prop.\nconst Dialog = React.forwardRef<HTMLElement, DialogProps>( ( props, ref ) => {\n\treturn (\n\t\t<MuiDialog\n\t\t\t{ ...props }\n\t\t\tref={ ref as React.MutableRefObject<null> }\n\t\t/>\n\t);\n} ) as React.FC<DialogProps>;\n\nexport default Dialog;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BM,IAAA,SAAS,aAAAA,QAAM,WAAsC,CAAE,OAAO,QAAQ;AAC3E,SACC,aAAAA,QAAC,cAAAC,gBACK,EAAA,GAAA,OACL,IAAyC,CACxC;AAEJ,CAAC;",
  "names": ["React", "MuiDialog"]
}
